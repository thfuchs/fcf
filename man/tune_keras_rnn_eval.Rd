% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tune_keras_rnn_eval.R
\name{tune_keras_rnn_eval}
\alias{tune_keras_rnn_eval}
\title{Evaluate (tuned) recurrent neural networks per split/sample}
\usage{
tune_keras_rnn_eval(
  fc_sample,
  cv_setting,
  bayes_best_par,
  col_id = NULL,
  col_date = "index",
  col_value = "value",
  h = NULL,
  frequency = 4,
  level = 95
)
}
\arguments{
\item{fc_sample}{forecasts per \code{rsample} split}

\item{cv_setting}{list of "periods_train", "periods_val", "periods_test" and
"skip_span" for \link[rsample]{rolling_origin}}

\item{bayes_best_par}{tuned hyperparameters, from \code{tune_keras_rnn_bayesoptim()}}

\item{col_id}{Optional ID column in \code{data}, default to "ticker"}

\item{col_date}{Date column in \code{data}, default to "index"}

\item{col_value}{Value column in \code{data}, default to "value"}

\item{h}{NULL if forecast horizon equals cv_setting$n_test, else named list
of forecast horizons for accuracy measures}

\item{frequency}{time series frequency, e.g. 4 for quarters and 12 for months}

\item{level}{level for prediction interval in percentage}
}
\value{
list of time series accuracy measures (MAPE, sMAPE, MASE, sMIS, ACD)
optionally for different forecast horizons (if \code{h} specified)
}
\description{
Evaluate (tuned) recurrent neural networks per split/sample
}
\examples{
result_predict <- readRDS(system.file(
"tinytest_data/test_tune_keras_rnn_predict_simple.rds", package = "tsRNN"
))
cv_setting <- list(
  periods_train = 90,
  periods_val = 10,
  periods_test = 10,
  skip_span = 5
)
bayes_best_par <- purrr::map(
  readRDS(system.file("tinytest_data/apple_bayesoptim.rds", package = "tsRNN")),
  "Best_Par"
)

# Result
tune_keras_rnn_eval(
  fc_sample = result_predict,
  cv_setting = cv_setting,
  bayes_best_par = bayes_best_par
)

# Specify multiple forecast horizons
tune_keras_rnn_eval(
  fc_sample = result_predict,
  cv_setting = cv_setting,
  bayes_best_par = bayes_best_par,
  h = list(short = 1:2, long = 3:6)
)

}
